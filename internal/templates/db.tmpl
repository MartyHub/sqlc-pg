// Code generated by {{ .Source }} {{ .Version }}
// DO NOT EDIT

package {{ .Package }}

import (
	"context"
	"errors"

	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgconn"
)

var ErrTooManyRows = errors.New("too many rows in result set")

type Database interface {
	Exec(ctx context.Context, stmt string, args ...any) (pgconn.CommandTag, error)
	Query(ctx context.Context, stmt string, args ...any) (pgx.Rows, error)
}

func CollectExactlyOneRow[T any](rows pgx.Rows, fn pgx.RowToFunc[T]) (T, error) {
	defer rows.Close()

	var (
		err    error
		result T
	)

	if !rows.Next() {
		if err = rows.Err(); err != nil {
			return result, err
		}

		return result, pgx.ErrNoRows
	}

	result, err = fn(rows)
	if err != nil {
		return result, err
	}

	if rows.Next() {
		return result, ErrTooManyRows
	}

	return result, rows.Err()
}
